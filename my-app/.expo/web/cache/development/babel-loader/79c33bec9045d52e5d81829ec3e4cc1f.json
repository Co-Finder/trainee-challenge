{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Inter_400Regular } from '@expo-google-fonts/inter';\nimport { FONTS } from \"./constants/theme\";\nimport { Home, Login, Notification, Profile } from \"./screens\";\nimport Tabs from \"./navigation/tabs\";\nimport Register from \"./screens/register\";\nimport '@react-native-async-storage/async-storage';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context/appContext\";\nimport { app } from \"./firebase/config\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nLogBox.ignoreLogs(['Asyncstorage: ...']);\nvar Stack = createNativeStackNavigator();\n\nfunction Stacks() {\n  var _useContext = useContext(AppContext),\n      user = _useContext.user;\n\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      initialRouteName: \"login\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: user ? _jsx(Stack.Screen, {\n        name: \"main\",\n        component: Tabs\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"register\",\n          component: Register,\n          options: {\n            headerShown: true,\n            title: \"Register\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"login\",\n          component: Login\n        })]\n      })\n    })\n  });\n}\n\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useFonts = useFonts({\n    Inter_400Regular: Inter_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  }\n\n  return _jsx(AppContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser\n    },\n    children: _jsx(Stacks, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/projects/trainee-challenge/my-app/App.js"],"names":["StatusBar","NavigationContainer","createNativeStackNavigator","AppLoading","useFonts","Inter_400Regular","FONTS","Home","Login","Notification","Profile","Tabs","Register","useState","useContext","AppContext","app","LogBox","ignoreLogs","Stack","Stacks","user","headerShown","title","App","setUser","fontsLoaded","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,0BAA3C;AACA,SAAQC,KAAR;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,YAArB,EAAmCC,OAAnC;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAO,2CAAP;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,UAAP;AACA,SAASC,GAAT;;;;;AAIAC,MAAM,CAACC,UAAP,CAAkB,CAAC,mBAAD,CAAlB;AAIA,IAAMC,KAAK,GAAGjB,0BAA0B,EAAxC;;AAIA,SAASkB,MAAT,GAAiB;AACf,oBAAeN,UAAU,CAACC,UAAD,CAAzB;AAAA,MAAOM,IAAP,eAAOA,IAAP;;AACA,SAEE,KAAC,mBAAD;AAAA,cACE,KAAC,KAAD,CAAO,SAAP;AACE,MAAA,gBAAgB,EAAC,OADnB;AAEE,MAAA,aAAa,EAAI;AACfC,QAAAA,WAAW,EAAG;AADC,OAFnB;AAAA,gBAMID,IAAI,GAAI,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAG,MAArB;AAA4B,QAAA,SAAS,EAAIV;AAAzC,QAAJ,GAEF;AAAA,mBACA,KAAC,KAAD,CAAO,MAAP;AACE,UAAA,IAAI,EAAG,UADT;AAEE,UAAA,SAAS,EAAIC,QAFf;AAGE,UAAA,OAAO,EAAI;AACTU,YAAAA,WAAW,EAAG,IADL;AAETC,YAAAA,KAAK,EAAG;AAFC;AAHb,UADA,EAQA,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAG,OAArB;AAA6B,UAAA,SAAS,EAAIf;AAA1C,UARA;AAAA;AARN;AADF,IAFF;AA4BD;;AAKD,eAAe,SAASgB,GAAT,GAAe;AAC5B,kBAAuBX,QAAQ,CAAC,IAAD,CAA/B;AAAA;AAAA,MAAMQ,IAAN;AAAA,MAAYI,OAAZ;;AACA,kBAAoBrB,QAAQ,CAAC;AAC3BC,IAAAA,gBAAgB,EAAhBA;AAD2B,GAAD,CAA5B;AAAA;AAAA,MAAKqB,WAAL;;AAIA,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,KAAC,UAAD,KAAP;AACD;;AAED,SAEE,KAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAI;AAACL,MAAAA,IAAI,EAAJA,IAAD;AAAOI,MAAAA,OAAO,EAAPA;AAAP,KAA9B;AAAA,cACE,KAAC,MAAD;AADF,IAFF;AAOD;AAED,IAAME,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Inter_400Regular } from '@expo-google-fonts/inter';\nimport {FONTS} from \"./constants/theme\"\nimport {Home, Login, Notification, Profile} from \"./screens\";\nimport Tabs from \"./navigation/tabs\"\nimport Register from './screens/register';\nimport '@react-native-async-storage/async-storage';\nimport { useState, useContext } from 'react';\nimport AppContext from './context/appContext';\nimport { app } from './firebase/config';\n\n//suppressing the firebase AsyncStorage waring\nimport {LogBox} from 'react-native';\nLogBox.ignoreLogs(['Asyncstorage: ...']);\n\n\n\nconst Stack = createNativeStackNavigator()\n\n  \n\nfunction Stacks(){\n  const {user} = useContext(AppContext);\n  return (\n    \n    <NavigationContainer >\n      <Stack.Navigator \n        initialRouteName='login'\n        screenOptions = {{\n          headerShown : false\n        }}>\n        {\n          user ? (<Stack.Screen name = \"main\" component = {Tabs}/>) : \n          (\n            <>\n            <Stack.Screen \n              name = \"register\" \n              component = {Register} \n              options = {{\n                headerShown : true,\n                title : \"Register\"}}/>\n            \n            <Stack.Screen name = \"login\" component = {Login}/>\n            </>\n          ) \n        }\n     \n      </Stack.Navigator>\n    </NavigationContainer>\n    \n  )\n}\n\n\n\n\nexport default function App() {\n  const[user, setUser] = useState(null)\n  let [fontsLoaded] = useFonts({\n    Inter_400Regular,\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  return (\n    \n    <AppContext.Provider value = {{user, setUser}}>\n      <Stacks/>\n    </AppContext.Provider>\n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}